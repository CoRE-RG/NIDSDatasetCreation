[General]
network = Test


###############################
# Common Ethernet Configuration

# Ethernet links are 1Gbps
*.*.eth[*].bitrate = 1Gbps

#*.configurator.config = xmldoc("config.xml")

**.ip.limitedBroadcast = true

# disable local multicast loop
**.udp.defaultMulticastLoop = false


#################################
# Network Node Type Configuration

# use TSN switche
*.switch.typename = "TsnSwitchWithLabeling"

# use TSN devices
*.node*.typename = "TsnDevice"


###########################
# Application Configuration

# node1 applications
*.node1.numApps = 1
*.node1.app[0].typename = "UdpSourceApp"
*.node1.app[0].source.packetNameFormat = "%M->SVideo-%c"
*.node1.app[0].source.packetLength = 1362B # => 1426B on phy
*.node1.app[0].source.productionInterval = uniform(30us,100us) # => 176 Mbit/s on phy
*.node1.app[0].io.destAddress = "node2"
*.node1.app[0].io.destPort = 1111

# node2 appliactions
*.node2.numApps = 1
*.node2.app[0].typename = "UdpSinkApp"
*.node2.app[0].display-name = "SVideo sink"
*.node2.app[0].io.localPort = 1111


#####################
# Clock Configuration

# clocks have a random constant drift in all network nodes
*.*.clock.oscillator.driftRate = uniform(-100ppm, 100ppm)

# application traffic sources use the local clock of the network node
*.*.app[*].source.clockModule = "^.^.clock"
*.*.app[*].*.source.clockModule = "^.^.^.clock"

# periodic gates in all traffic shapers use the local clock of the network node
*.*.eth[*].macLayer.queue.transmissionGate[*].clockModule = "^.^.^.^.clock"


####################################
# Time Synchronization Configuration

# enable time synchronization in all network nodes
*.*.hasTimeSynchronization = true

# master
*.node1.clock.typename = "OscillatorBasedClock"
*.node1.gptp.gptpNodeType = "MASTER_NODE"
*.node1.gptp.masterPorts = ["eth0"]
*.node1.gptp.slavePort = ""

# all Ethernet switches act as a gPTP bridge
*.switch.gptp.slavePort = "eth0"
*.switch.gptp.masterPorts = ["eth1"]


#############################
# Stream Coding Configuration

# enable outgoing TSN streams
*.*.hasOutgoingStreams = true

# video stream identification and coding
*.node1.bridging.streamIdentifier.identifier.mapping = [{stream: "SSync", packetFilter: expr(name =~ "*Gptp*")},
                                                        {stream: "SVideo", packetFilter: expr(has(udp) && udp.destPort == 1111)}]
*.node1.bridging.streamCoder.encoder.mapping = [{stream: "SSync", vlan: 0, pcp: 7},
                                                {stream: "SVideo", vlan: 0, pcp: 5}]

# stream identification on switches
*.switch.bridging.streamIdentifier.identifier.mapping = [{stream: "SSync", packetFilter: expr(name =~ "*Gptp*")}]
*.switch.bridging.streamCoder.decoder.mapping = [{destination: "01-80-C2-00-00-0E", stream: "SSync"},
											     {source: "node1", vlan: 0, pcp: 5, stream: "SVideo"}]
*.switch.bridging.streamCoder.encoder.mapping = [{stream: "SSync", vlan: 0, pcp: 7},
                                                 {stream: "SVideo", vlan: 0, pcp: 5}]


###############################
# Traffic Shaping Configuration

# enable egress traffic shaping
*.*.hasEgressTrafficShaping = true

# set traffic classes
*.*.eth[*].macLayer.queue.numTrafficClasses = 8
*.*.eth[*].macLayer.queue.*[0].display-name = "background"
*.*.eth[*].macLayer.queue.*[1].display-name = "best effort"
*.*.eth[*].macLayer.queue.*[2].display-name = "v2x"
*.*.eth[*].macLayer.queue.*[3].display-name = ""
*.*.eth[*].macLayer.queue.*[4].display-name = "control"
*.*.eth[*].macLayer.queue.*[5].display-name = "sensors"
*.*.eth[*].macLayer.queue.*[6].display-name = "drive"
*.*.eth[*].macLayer.queue.*[7].display-name = "sync"


###############################
# PCAP Recording

**.crcMode = "computed"
**.fcsMode = "computed"
*.switch.numPcapRecordersWithLabeling = 1
*.switch.pcapRecorderWithLabeling[0].pcapLinkType = 1 # Ethernet
*.switch.pcapRecorderWithLabeling[0].pcapFile = "results/switch.all.pcap"
*.switch.pcapRecorderWithLabeling[0].moduleNamePatterns = "eth[*]"
*.switch.pcapRecorderWithLabeling[0].sendingSignalNames = ""


###############################
# Traffic Anomaly Configuration

*.switch.eth[*].macLayer.typename = "CorruptEthernetMacLayer"
*.node*.eth[*].macLayer.typename = "CorruptEthernetMacLayer"
*.node1.eth[0].macLayer.corruptLinkLayer.typename = "CorruptPacketInjection"
*.node1.eth[0].macLayer.corruptLinkLayer.injectionInterval = 0.5ms
*.node1.eth[0].macLayer.corruptLinkLayer.destPort = 1111
*.node1.eth[0].macLayer.corruptLinkLayer.srcPort = 1025
*.node1.eth[0].macLayer.corruptLinkLayer.destIpAddress = "10.0.0.2"
*.node1.eth[0].macLayer.corruptLinkLayer.srcIpAddress = "10.0.0.1"
*.node1.eth[0].macLayer.corruptLinkLayer.destMacAddress = "0A-AA-00-00-00-04"
*.node1.eth[0].macLayer.corruptLinkLayer.srcMacAddress = "0A-AA-00-00-00-03"
*.node1.eth[0].macLayer.corruptLinkLayer.priority = 5
*.node1.eth[0].macLayer.corruptLinkLayer.vid = 0
*.node1.eth[0].macLayer.corruptLinkLayer.payload = 8Byte
#*.node1.eth[0].macLayer.corruptLinkLayer.typename = "CorruptPacketElimination"
#*.node1.eth[0].macLayer.corruptLinkLayer.packetFilter = expr(has(udp) && udp.destPort == 1111)
#*.node1.eth[0].macLayer.corruptLinkLayer.probability = 0.5
#*.node1.eth[0].macLayer.corruptLinkLayer.typename = "CorruptPacketManipulation"
#*.node1.eth[0].macLayer.corruptLinkLayer.packetFilter = expr(has(udp) && udp.destPort == 1111)
#*.node1.eth[0].macLayer.corruptLinkLayer.probability = 0.5
#*.node1.eth[0].macLayer.corruptLinkLayer.destMacAddress = "FF-FF-FF-FF-FF-FF"
#*.node1.eth[0].macLayer.corruptLinkLayer.typename = "CorruptPacketReordering"
#*.node1.eth[0].macLayer.corruptLinkLayer.packetFilter = expr(has(udp) && udp.destPort == 1111)
#*.node1.eth[0].macLayer.corruptLinkLayer.probability = 0.5
#*.node1.eth[0].macLayer.corruptLinkLayer.numberOfPacketsBeforeInjection = 2
#*.node1.eth[0].macLayer.corruptLinkLayer.typename = "CorruptPacketDelay"
#*.node1.eth[0].macLayer.corruptLinkLayer.packetFilter = expr(has(udp) && udp.destPort == 1111)
#*.node1.eth[0].macLayer.corruptLinkLayer.probability = 0.5
#*.node1.eth[0].macLayer.corruptLinkLayer.delayTime = 100us
